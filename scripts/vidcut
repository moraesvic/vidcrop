#!/bin/bash

. ./common

if [ $# -ne 3 ] ; then
	fatalerr "Wrong usage"
fi

testfile "$1"

time_regex="^[0-9]{1,2}:[0-9]{2}:[0-9]{2}$"

for arg in $2 $3 ; do
	if [[ ! $arg =~ $time_regex ]] ; then
		fatalerr "\"$arg\" is not a valid time (HH:MM:SS)"
	fi
done

input_file="$1"
start_time="$2"
end_time="$3"

file_without_path="${input_file##*/}"
path_to_file="${input_file%/*}"

out_dir_full_path="${path_to_file}/${out_dir}"

dirassert "$out_dir_full_path"

extension="${file_without_path##*.}"
timestamp=$(date +"%d_%b__%T")

existing=$(

cd $out_dir_full_path 
ls -1 ${file_without_path%.*}.* 2> /dev/null |
wc -l

)
new_index=$((existing + 1))

output_file="${out_dir_full_path}/${file_without_path%.*}.${new_index}__${start_time}_${end_time}.$extension"

echo -e "Success! will output to $output_file"

log_file="${out_dir_full_path}/${0}.log"
echo "${timestamp} : creating ${output_file}" >> "$log_file"

################################################################################
# The error was in the following line
#
# The problem is ffmpeg also reads data from stdin, thus consuming
# data that was meant for "read"
# The solution lies in setting stdin from /dev/null
#
# https://unix.stackexchange.com/questions/241535/problem-with-ffmpeg-in-bash-loop
#

ffmpeg -loglevel warning -ss "$start_time" \
	-to "$end_time" -i "$input_file" \
	-c copy "$output_file" < /dev/null

